<% layout("_layout", it) %>

<main class="sb-photos container">
  <header class="page-header head">
    <div>
      <h1 class="h1">תמונות — <%= it.restaurant.name %></h1>
      <p class="muted"><%= it.restaurant.city %> · <%= it.restaurant.address %></p>
    </div>
    <a class="btn ghost sm" href="/owner">חזרה לדשבורד</a>
  </header>

  <% if (it.saved) { %>
    <div class="alert success" role="status">✓ נשמר בהצלחה</div>
  <% } %>

  <section class="card">
    <h3 class="card-title">העלאת תמונה (מוקטנת אוטומטית)</h3>
    <p class="muted">JPG/PNG/WebP — ננסה לכווץ כדי להתאים למגבלת המערכת (~64KB).</p>

    <div class="uploader">
      <input id="photo-input" class="file" type="file" accept="image/png,image/jpeg,image/webp">
      <button id="upload-btn" class="btn primary sm" type="button">העלה</button>
    </div>

    <div id="preview" class="preview"></div>
  </section>

  <section class="card">
    <h3 class="card-title">גלריה</h3>
    <%
      const photos = Array.isArray(it.restaurant.photos) ? it.restaurant.photos : [];
    %>
    <% if (!photos.length) { %>
      <p class="muted">אין עדיין תמונות.</p>
    <% } else { %>
      <div class="grid">
        <% photos.forEach(function(p){ %>
          <figure class="photo-card" data-id="<%= p.id %>">
            <img src="<%= p.dataUrl %>" alt="<%= p.alt || it.restaurant.name %>">
            <figcaption class="caption">
              <button class="btn danger sm delete-btn" data-id="<%= p.id %>" type="button">🗑 מחיקה</button>
            </figcaption>
          </figure>
        <% }) %>
      </div>
    <% } %>
  </section>
</main>

<script>
(function(){
  const rid = "<%= it.restaurant.id %>";
  const fileInput = document.getElementById('photo-input');
  const uploadBtn = document.getElementById('upload-btn');
  const preview = document.getElementById('preview');

  fileInput.addEventListener('change', () => {
    preview.innerHTML = '';
    const f = fileInput.files && fileInput.files[0];
    if (!f) return;
    const url = URL.createObjectURL(f);
    preview.innerHTML = '<img src="'+url+'" class="preview-img">';
  });

  async function shrinkToUnder(targetBytes, file) {
    const img = await new Promise((res, rej) => {
      const el = new Image();
      el.onload = () => res(el);
      el.onerror = rej;
      el.src = URL.createObjectURL(file);
    });

    const canvas = document.createElement('canvas');
    const ctx2d = canvas.getContext('2d');

    const maxW = 1280, maxH = 1280;
    let { width: w, height: h } = img;
    const ratio = Math.min(1, maxW / w, maxH / h);
    w = Math.floor(w * ratio);
    h = Math.floor(h * ratio);

    canvas.width = w; canvas.height = h;
    ctx2d.drawImage(img, 0, 0, w, h);

    let best = null;
    let quality = 0.85;
    for (let i=0; i<8; i++) {
      const blob = await new Promise(res => canvas.toBlob(res, 'image/webp', quality));
      if (!blob) break;
      best = blob;
      if (blob.size <= targetBytes) return blob;
      quality *= 0.8;
    }
    const fallback = await new Promise(res => canvas.toBlob(res, 'image/webp', 0.6));
    return fallback || best || file;
  }

  uploadBtn.addEventListener('click', async () => {
    const f = fileInput.files && fileInput.files[0];
    if (!f) return alert("בחר/י תמונה קודם");

    const targetBytes = 60 * 1024; // ~60KB
    let blob = f;
    if (f.size > targetBytes) {
      try { blob = await shrinkToUnder(targetBytes, f) || f; }
      catch(e){ console.warn("shrink failed", e); }
    }

    const res = await fetch(`/owner/restaurants/${encodeURIComponent(rid)}/photos/upload`, {
      method: "POST",
      headers: { "Content-Type": blob.type || "image/webp" },
      body: blob
    });

    if (!res.ok) {
      const txt = await res.text().catch(()=>"");
      alert("שגיאה בהעלאה: " + res.status + "\\n" + txt);
      return;
    }
    const data = await res.json();
    if (data.ok) location.reload();
    else alert("שגיאה בשמירה");
  });

  document.addEventListener('click', async (ev) => {
    const btn = ev.target.closest?.('.delete-btn');
    if (!btn) return;
    const pid = btn.getAttribute('data-id');
    if (!pid) return;
    if (!confirm('למחוק תמונה זו?')) return;

    const res = await fetch(`/owner/restaurants/${encodeURIComponent(rid)}/photos/delete`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: pid }),
    });
    if (!res.ok) return alert('מחיקה נכשלה');
    const data = await res.json();
    if (data.ok) document.querySelector('.photo-card[data-id="'+pid+'"]')?.remove();
  });
})();
</script>

<style>
  /* ===== תואם SpotBook (כהה יוקרתי) – ללא שינוי פיצ'רים ===== */
  .sb-photos.container{ max-width: 1000px; margin: 0 auto; padding: 0 16px }
  .head{ display:flex; align-items:center; justify-content:space-between; gap:12px; margin: 18px 0 }
  .h1{ margin:0 0 6px }
  .muted{ color: var(--ink-muted, #9aa3b2) }

  .alert.success{
    background: color-mix(in srgb, #16a34a 12%, transparent);
    border:1px solid color-mix(in srgb, #16a34a 45%, transparent);
    color:#c5f2d3; border-radius:12px; padding:10px 12px; margin: 12px 0 14px;
  }

  .card{
    background: var(--panel, #121622);
    border:1px solid var(--bd, #222834);
    border-radius:18px; padding:18px; margin:12px 0 18px;
    color: var(--ink, #e6e8ef);
    box-shadow: 0 10px 30px rgba(0,0,0,.35);
  }
  .card-title{ margin:0 0 8px; font-size: clamp(16px, 2.2vw, 20px) }

  /* העלאה + תצוגה מקדימה */
  .uploader{ display:flex; gap:10px; align-items:center; flex-wrap:wrap }
  .file{
    background:#171b29; color:#e6e8ef; border:1px solid #23293a; border-radius:12px;
    padding:8px 10px; font-size:14px;
  }
  .preview{ margin-top:12px }
  .preview-img{
    max-width:260px; max-height:180px; border-radius:10px; border:1px solid #23293a; display:block
  }

  /* גלריה */
  .grid{ display:grid; grid-template-columns:repeat(auto-fill, minmax(160px,1fr)); gap:12px }
  .photo-card{
    border:1px solid var(--bd, #222834); border-radius:12px; padding:8px;
    background: color-mix(in srgb, #171b29 92%, transparent);
  }
  .photo-card img{
    width:100%; height:140px; object-fit:cover; border-radius:10px; border:1px solid #23293a
  }
  .caption{ display:flex; justify-content:space-between; align-items:center; margin-top:8px }

  /* כפתורים “חיים” */
  .btn{
    display:inline-flex; align-items:center; justify-content:center; gap:8px;
    padding:10px 14px; border-radius:12px; cursor:pointer; text-decoration:none;
    border:1px solid var(--bd, #23293a); background:transparent;
    color: var(--ink, #e6e8ef); font-weight:700;
    transition: transform .08s ease, filter .12s ease, box-shadow .12s ease;
  }
  .btn:hover{ transform: translateY(-1px); }
  .btn.primary{
    background: var(--brand, #3b82f6); color: var(--brand-ink, #fff); border-color:transparent;
    box-shadow: 0 8px 24px rgba(59,130,246,.35);
  }
  .btn.ghost{
    background: color-mix(in srgb, var(--panel, #121622) 88%, transparent);
  }
  .btn.ghost:hover{ background: color-mix(in srgb, var(--panel, #121622) 94%, transparent); }
  .btn.danger{ background:#ef4444; color:#fff; border-color:transparent; }
  .btn.sm{ padding:8px 12px; border-radius:10px; font-size:.95rem }

  @media (max-width:760px){
    .preview-img{ max-width:100%; height:auto }
  }
</style>
