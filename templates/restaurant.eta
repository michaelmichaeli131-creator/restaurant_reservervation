<% layout("_layout", it) %>
<main class="container">
  <header class="page-header">
    <h1><%= it.restaurant.name %></h1>
    <p class="muted"><%= it.restaurant.city %> · <%= it.restaurant.address %></p>
    <% if (it.restaurant.phone) { %>
      <p class="muted">טלפון: <%= it.restaurant.phone %></p>
    <% } %>
  </header>

  <section class="card">
    <h2 style="margin-top:0">הזמנת מקום — שלב 1</h2>

    <% if (it.conflict) { %>
      <div class="alert warn" role="alert">
        אין זמינות בשעה שבחרת. בחר/י שעה אחרת מהרשימה להלן.
      </div>
    <% } %>

    <form id="reserve-form"
          class="form-grid"
          action="/restaurants/<%= it.restaurant.id %>/reserve"
          method="post" novalidate>
      <div class="form-row">
        <label for="date">תאריך</label>
        <input id="date" name="date" type="date" required value="<%= it.date || '' %>"/>
      </div>
      <div class="form-row">
        <label for="time">שעה</label>
        <div class="time-select-wrapper">
          <select id="time" name="time" required>
            <% for (let h = 0; h < 24; h++) {
                 for (let m = 0; m < 60; m += 15) {
                   const hh = String(h).padStart(2, "0");
                   const mm = String(m).padStart(2, "0");
                   const val = `${hh}:${mm}`;
                   const sel = (it.time === val) ? "selected" : "";
            %>
              <option value="<%= val %>" <%= sel %>><%= val %></option>
            <%     }
               }
            %>
          </select>
        </div>
        <small class="muted">שעות בתדירות 15 דקות (24-ש’)</small>
      </div>
      <div class="form-actions">
        <button type="submit" class="btn">המשך לשלב הבא</button>
        <button type="button" id="check-btn" class="btn secondary"
                data-rid="<%= it.restaurant.id %>">בדוק זמינות</button>
      </div>
    </form>
  </section>

  <section class="card" id="around-card" hidden>
    <h3 style="margin-top:0">שעות זמינות סביב המועד שבחרת (±2 שעות)</h3>
    <div id="around-slots" class="slots"></div>
    <small class="muted">לחיצה על שעה מעתיקה לשדה השעה.</small>
  </section>

  <% if (it.restaurant.description) { %>
    <section class="card">
      <h2 style="margin-top:0">על המסעדה</h2>
      <p><%= it.restaurant.description %></p>
    </section>
  <% } %>

  <% if (it.restaurant.menu && it.restaurant.menu.length) { %>
    <section class="card">
      <h2 style="margin-top:0">תפריט</h2>
      <ul class="menu-list">
        <% it.restaurant.menu.forEach(item => { %>
          <li>
            <strong><%= item.name %></strong>
            <% if (item.price != null) { %> — <span class="muted"><%= item.price %> ₪</span><% } %>
            <% if (item.desc) { %><br/><span class="muted"><%= item.desc %></span><% } %>
          </li>
        <% }) %>
      </ul>
    </section>
  <% } %>

  <% if (it.restaurant.photos && it.restaurant.photos.length) { %>
    <section class="card">
      <h2 style="margin-top:0">תמונות</h2>
      <div class="photo-grid">
        <% it.restaurant.photos.forEach(src => { %>
          <img src="<%= src %>" alt="תמונה של המסעדה" loading="lazy"/>
        <% }) %>
      </div>
    </section>
  <% } %>
</main>

<script>
  function readForm() {
    const f = document.getElementById("reserve-form");
    return {
      date: f.querySelector('[name="date"]').value,
      time: f.querySelector('[name="time"]').value
    };
  }

  async function postJSON(url, payload) {
    const res = await fetch(url, {
      method: "POST",
      headers: { "Accept": "application/json", "Content-Type": "application/json" },
      body: JSON.stringify(payload),
      redirect: "follow"
    });
    const text = await res.text();
    let data = null;
    try { data = JSON.parse(text); } catch {}
    return { ok: res.ok, status: res.status, data, text };
  }

  function renderAround(slots) {
    const card = document.getElementById("around-card");
    const box = document.getElementById("around-slots");
    box.innerHTML = "";
    if (Array.isArray(slots) && slots.length) {
      card.hidden = false;
      slots.slice(0, 4).forEach(t => {
        const b = document.createElement("button");
        b.type = "button";
        b.className = "slot";
        b.textContent = t;
        b.onclick = () => {
          document.getElementById("time").value = t;
          renderAround([]);
        };
        box.appendChild(b);
      });
    } else {
      card.hidden = true;
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    const btn = document.getElementById("check-btn");
    btn?.addEventListener("click", async () => {
      const { date, time } = readForm();
      if (!date || !time) {
        alert("נא לבחור תאריך ושעה");
        return;
      }
      const rid = btn.dataset.rid;
      const r = await postJSON(`/api/restaurants/${encodeURIComponent(rid)}/check`, { date, time });
      if (r.ok && r.data && r.data.ok) {
        renderAround([]);
      } else {
        renderAround(r.data?.suggestions || []);
      }
    });
  });
</script>

<style>
  .container {
    max-width: 960px;
    margin: 24px auto;
    padding: 0 16px;
  }
  .card {
    border: 1px solid #e2e8f0;
    border-radius: 10px;
    padding: 20px;
    margin-bottom: 24px;
    background-color: #fff;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.05);
  }
  .page-header h1 {
    margin-bottom: 4px;
    font-size: 1.8rem;
    color: #2d3748;
  }
  .page-header .muted {
    color: #718096;
    font-size: 0.9rem;
  }
  .form-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 16px;
  }
  .form-row {
    display: flex;
    flex-direction: column;
  }
  .form-row label {
    font-weight: 500;
    margin-bottom: 6px;
    color: #333;
  }
  .time-select-wrapper {
    position: relative;
    width: 100%;
  }
  .time-select-wrapper select {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    padding: 10px 40px 10px 12px;
    border: 1px solid #cbd5e0;
    border-radius: 8px;
    background: white;
    font-size: 1rem;
    cursor: pointer;
    transition: border-color 0.2s;
  }
  .time-select-wrapper select:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.3);
  }
  .time-select-wrapper::after {
    content: "▾";
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    color: #666;
    font-size: 1rem;
  }
  .form-row input:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.3);
  }
  .form-row input,
  .form-row select {
    padding: 10px 12px;
    border: 1px solid #cbd5e0;
    border-radius: 6px;
    font-size: 1rem;
    transition: border-color 0.2s, box-shadow 0.2s;
  }
  .form-actions {
    grid-column: 1 / -1;
    display: flex;
    gap: 12px;
    margin-top: 16px;
  }
  .btn {
    padding: 10px 16px;
    border: none;
    border-radius: 6px;
    background-color: #667eea;
    color: #fff;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.2s;
  }
  .btn:hover {
    background-color: #5a67d8;
  }
  .btn.secondary {
    background-color: #a0aec0;
  }
  .btn.secondary:hover {
    background-color: #718096;
  }
  .alert.warn {
    background-color: #fff5f5;
    border: 1px solid #fed7d7;
    color: #c53030;
    padding: 12px;
    border-radius: 6px;
    margin-bottom: 12px;
  }
  .slots {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-top: 12px;
  }
  .slot {
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 6px;
    background-color: #f7fafc;
    cursor: pointer;
    transition: background-color 0.2s, border-color 0.2s;
  }
  .slot:hover {
    background-color: #edf2f7;
    border-color: #cbd5e0;
  }
  .menu-list {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  .menu-list li {
    padding: 8px 0;
    border-bottom: 1px dashed #eee;
  }
  .photo-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(160px,1fr));
    gap: 10px;
  }
  .photo-grid img {
    width: 100%;
    height: 120px;
    object-fit: cover;
    border-radius: 8px;
    border: 1px solid #eee;
  }
  @media (max-width: 860px) {
    .form-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
