<% layout("_layout", it) %>
<main class="container">
  <header class="page-header">
    <h1><%= it.restaurant.name %></h1>
    <p class="muted"><%= it.restaurant.city %> · <%= it.restaurant.address %></p>
    <% if (it.restaurant.phone) { %>
      <p class="muted">טלפון: <%= it.restaurant.phone %></p>
    <% } %>
  </header>

  <% const cap = it.restaurant.capacity || 30; %>

  <section class="card">
    <h2 style="margin-top:0">הזמנת מקום</h2>

    <% if (it.conflict) { %>
      <div class="alert warn" role="alert">
        לא זמין בשעה שביקשת.
        <% if (it.suggestions && it.suggestions.length) { %>
          הצעות: <%= it.suggestions.join(", ") %>
        <% } %>
      </div>
    <% } %>

    <form id="reserve-form"
          class="form-grid"
          action="/restaurants/<%= it.restaurant.id %>/reserve"
          method="post">

      <div class="form-row">
        <label for="date">תאריך</label>
        <input id="date"
               name="date"
               type="date"
               required
               value="<%= it.date || '' %>" />
      </div>

      <div class="form-row">
        <label for="time">שעה</label>
        <input id="time"
               name="time"
               type="time"
               required
               step="900"
               value="<%= it.time || '' %>" />
      </div>

      <div class="form-row">
        <label for="people">מספר סועדים</label>
        <input id="people"
               name="people"
               type="number"
               min="1"
               max="<%= cap %>"
               required
               value="<%= it.people || 2 %>" />
        <small class="muted">מינ' 1 · מקס' <%= cap %></small>
      </div>

      <div class="form-actions">
        <button type="submit" class="btn">הזמן</button>
        <button type="button"
                id="check-btn"
                class="btn secondary"
                data-rid="<%= it.restaurant.id %>">
          בדוק זמינות
        </button>
      </div>
    </form>
  </section>

  <% if (it.restaurant.description) { %>
    <section class="card">
      <h2 style="margin-top:0">על המסעדה</h2>
      <p><%= it.restaurant.description %></p>
    </section>
  <% } %>

  <% if (it.restaurant.menu && it.restaurant.menu.length) { %>
    <section class="card">
      <h2 style="margin-top:0">תפריט</h2>
      <ul class="menu-list">
        <% it.restaurant.menu.forEach(item => { %>
          <li>
            <strong><%= item.name %></strong>
            <% if (item.price != null) { %> — <span class="muted"><%= item.price %> ₪</span><% } %>
            <% if (item.desc) { %><br/><span class="muted"><%= item.desc %></span><% } %>
          </li>
        <% }) %>
      </ul>
    </section>
  <% } %>

  <% if (it.restaurant.photos && it.restaurant.photos.length) { %>
    <section class="card">
      <h2 style="margin-top:0">תמונות</h2>
      <div class="photo-grid">
        <% it.restaurant.photos.forEach(src => { %>
          <img src="<%= src %>" alt="תמונה של המסעדה" loading="lazy"/>
        <% }) %>
      </div>
    </section>
  <% } %>
</main>

<script>
  // Helper: איסוף ערכי הטופס
  function readForm() {
    const form = document.getElementById('reserve-form');
    return {
      date: form.querySelector('[name="date"]').value,
      time: form.querySelector('[name="time"]').value,
      people: Number(form.querySelector('[name="people"]').value || 0),
    };
  }

  // שליחת JSON אמיתי – עוקף בעיות של ניתוח form-encoded בצד השרת
  async function postJSON(url, payload) {
    const res = await fetch(url, {
      method: 'POST',
      headers: {
        'Accept': 'application/json',         // גורם לשרת להחזיר JSON
        'Content-Type': 'application/json',   // גוף JSON
      },
      body: JSON.stringify(payload),
    });
    const ct = res.headers.get('content-type') || '';
    const isJson = ct.includes('application/json');
    const data = isJson ? await res.json() : null;
    return { ok: res.ok, status: res.status, data };
  }

  // AJAX: בדיקת זמינות
  (function () {
    const btn = document.getElementById('check-btn');
    if (!btn) return;
    btn.addEventListener('click', async () => {
      const { date, time, people } = readForm();
      const rid = btn.dataset.rid;

      try {
        const r = await postJSON(`/api/restaurants/${encodeURIComponent(rid)}/check`, { date, time, people });
        if (r.ok && r.data?.ok) {
          alert('זמין!');
        } else if (r.data && r.data.reason) {
          alert('לא זמין. ' + (r.data.suggestions?.length ? 'הצעות: ' + r.data.suggestions.join(', ') : ''));
        } else {
          alert('שגיאה בבדיקת זמינות');
        }
      } catch (e) {
        console.error(e);
        alert('שגיאה בבדיקת זמינות');
      }
    });
  })();

  // Submit רגיל של הטופס — ניירט ל־JSON ואז ננווט ידנית
  (function () {
    const form = document.getElementById('reserve-form');
    form.addEventListener('submit', async (ev) => {
      ev.preventDefault();
      const { date, time, people } = readForm();
      const url = form.getAttribute('action');

      try {
        const r = await postJSON(url, { date, time, people });
        if (r.ok && r.data?.ok) {
          // ניווט אחרי הצלחה
          const rid = "<%= it.restaurant.id %>";
          const u = new URL(`/restaurants/${encodeURIComponent(rid)}`, location.origin);
          u.searchParams.set('ok', '1');
          u.searchParams.set('date', date);
          u.searchParams.set('time', time);
          location.assign(u.toString());
        } else if (r.status === 400 && r.data) {
          alert(r.data?.error || 'נתונים לא תקינים');
        } else if (r.status === 409 && r.data) {
          alert('לא זמין. ' + (r.data.suggestions?.length ? 'הצעות: ' + r.data.suggestions.join(', ') : ''));
        } else {
          alert('שגיאה בשליחת ההזמנה');
        }
      } catch (e) {
        console.error(e);
        alert('שגיאה בשליחת ההזמנה');
      }
    });
  })();
</script>

<style>
  .container{max-width:960px;margin:24px auto;padding:0 16px}
  .card{border:1px solid #eee;border-radius:12px;padding:16px;margin-bottom:18px}
  .muted{color:#777}
  .form-grid{display:grid;grid-template-columns:repeat(3,1fr);gap:12px}
  .form-row{display:flex;flex-direction:column}
  .form-actions{grid-column:1/-1;display:flex;gap:10px}
  .btn{background:#111;color:#fff;border:none;border-radius:8px;padding:8px 12px;cursor:pointer}
  .btn.secondary{background:#555}
  .alert.warn{background:#fff1f0;border:1px solid #ffccc7;color:#a8071a;border-radius:8px;padding:10px 12px;margin-bottom:12px}
  .menu-list{list-style:none;margin:0;padding:0}
  .menu-list li{padding:8px 0;border-bottom:1px dashed #eee}
  .photo-grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));gap:10px}
  .photo-grid img{width:100%;height:120px;object-fit:cover;border-radius:8px;border:1px solid #eee}
  @media (max-width:860px){.form-grid{grid-template-columns:1fr}}
</style>
