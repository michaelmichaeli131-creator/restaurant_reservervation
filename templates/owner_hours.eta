<% layout("_layout", it) %>
<main class="container">
  <header class="page-header">
    <h1>הגדרת שעות פתיחה — <%= it.restaurant.name %></h1>
    <p class="muted"><%= it.restaurant.city %> · <%= it.restaurant.address %></p>
    <% if (it.saved) { %>
      <div class="alert ok" role="alert">השעות נשמרו בהצלחה.</div>
    <% } %>
  </header>

  <section class="card">
    <form id="hours-form" class="form-grid" novalidate>
      <input type="hidden" id="rid" value="<%= it.restaurant.id %>"/>

      <div class="form-row">
        <label for="capacity">קיבולת מקסימלית בו־זמנית</label>
        <input id="capacity" type="number" min="1" step="1" value="<%= it.restaurant.capacity %>"/>
      </div>

      <div class="form-row">
        <label for="slot">גריד סלוטים (דקות)</label>
        <input id="slot" type="number" min="5" max="180" step="5" value="<%= it.restaurant.slotIntervalMinutes %>"/>
      </div>

      <h3>שעות לכל יום</h3>
      <table class="table">
        <thead>
          <tr><th>יום</th><th>סגור</th><th>מ־</th><th>עד</th></tr>
        </thead>
        <tbody>
          <% for (let d = 0; d < 7; d++) { 
               const day = it.restaurant.weeklySchedule?.[d];
               const isClosed = day === null;
               const first = Array.isArray(day) && day.length ? day[0] : { open: "09:00", close: "22:00" };
          %>
          <tr data-day="<%= d %>">
            <td><%= it.dayLabels[d] %></td>
            <td>
              <input type="checkbox" class="closed" <%= isClosed ? "checked" : "" %> />
            </td>
            <td>
              <input type="text" class="open" value="<%= isClosed ? "" : first.open %>" placeholder="09:00" pattern="\\d{2}:\\d{2}" />
            </td>
            <td>
              <input type="text" class="close" value="<%= isClosed ? "" : first.close %>" placeholder="22:00" pattern="\\d{2}:\\d{2}" />
            </td>
          </tr>
          <% } %>
        </tbody>
      </table>

      <div class="form-row">
        <button type="submit" class="btn primary">שמירה</button>
      </div>
    </form>
  </section>
</main>

<script>
(function () {
  const $ = (sel, root=document) => root.querySelector(sel);
  const $$ = (sel, root=document) => Array.from(root.querySelectorAll(sel));
  const form = $("#hours-form");

  function toHHMM(s) {
    if (!s) return null;
    const t = String(s).trim().replace(".", ":");
    const m = t.match(/^(\d{1,2}):(\d{2})$/);
    if (!m) return null;
    const h = Math.max(0, Math.min(23, Number(m[1])));
    const mi = Math.max(0, Math.min(59, Number(m[2])));
    return String(h).padStart(2,"0") + ":" + String(mi).padStart(2,"0");
  }

  form.addEventListener("submit", async (ev) => {
    ev.preventDefault();
    const rid = $("#rid").value;
    const capacity = Number($("#capacity").value || "0");
    const slot = Number($("#slot").value || "15");

    const weeklySchedule = {};
    $$("#hours-form tbody tr").forEach(tr => {
      const day = Number(tr.getAttribute("data-day"));
      const closed = tr.querySelector(".closed").checked;
      const open = toHHMM(tr.querySelector(".open").value);
      const close = toHHMM(tr.querySelector(".close").value);

      if (closed) {
        weeklySchedule[day] = null;         // סגור מפורש
      } else {
        if (open && close) {
          weeklySchedule[day] = { closed: false, ranges: [{ open, close }] };
        } else {
          // לא נשלח את היום בכלל → השרת לא ישנה אותו
        }
      }
    });

    const payload = {
      capacity,
      slotIntervalMinutes: slot,
      weeklySchedule
    };

    // לוג דיבוג בצד לקוח (כמו שהצגת)
    try { console.debug("payload", payload); } catch {}

    // שליחה ב-JSON תקני
    try {
      const res = await fetch(`/owner/restaurants/${encodeURIComponent(rid)}/hours`, {
        method: "POST",
        headers: { "Content-Type": "application/json", "Accept": "application/json" },
        body: JSON.stringify(payload)
      });
      if (res.ok) {
        // ננווט עם saved=1 כדי שתראה הודעת הצלחה
        location.href = `/owner/restaurants/${encodeURIComponent(rid)}/hours?saved=1`;
        return;
      }
    } catch (e) {
      console.warn("fetch failed, falling back to standard submit", e);
    }

    // נפילה ל-submit רגיל אם fetch נכשל (נייצר שדות חבויים מהאובייקט)
    const tmp = document.createElement("form");
    tmp.method = "POST";
    tmp.action = `/owner/restaurants/${encodeURIComponent(rid)}/hours`;
    const inp = document.createElement("input");
    inp.type = "hidden";
    inp.name = "weeklySchedule";
    inp.value = JSON.stringify(weeklySchedule);
    tmp.appendChild(inp);
    const cap = document.createElement("input");
    cap.type = "hidden"; cap.name = "capacity"; cap.value = String(capacity);
    tmp.appendChild(cap);
    const sl = document.createElement("input");
    sl.type = "hidden"; sl.name = "slotIntervalMinutes"; sl.value = String(slot);
    tmp.appendChild(sl);
    document.body.appendChild(tmp);
    tmp.submit();
  });
})();
</script>
