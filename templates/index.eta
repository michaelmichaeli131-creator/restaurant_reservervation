<% layout("_layout", it) %>

<main class="container">
  <section class="card">
    <h1 style="margin-top:0">מצא/י מסעדה</h1>

    <form class="search-row" method="get" action="/" novalidate>
      <input id="q" name="q" type="text" placeholder="שם מסעדה / עיר / כתובת"
             value="<%= it.q || '' %>" autocomplete="off" />
      <input type="hidden" name="search" value="1"/>
      <button class="btn" type="submit">חפש/י</button>
    </form>

    <!-- תיבת הצעות לאוטוקומפליט -->
    <div id="ac-list" class="ac-list" hidden></div>
  </section>

  <% const showResults = (it.search === "1") || ((it.q || "").trim().length); %>
  <% if (showResults) { %>
    <section class="card">
      <h2 style="margin-top:0">תוצאות</h2>

      <% if (!it.restaurants || !it.restaurants.length) { %>
        <p class="muted">לא נמצאו תוצאות.</p>
      <% } else { %>
        <ul class="results">
          <% it.restaurants.forEach(r => {
               const _photos = Array.isArray(r.photos)
                 ? r.photos.map(p => (typeof p === 'string' ? p : p?.dataUrl)).filter(Boolean)
                 : [];
               const thumb = _photos[0] || "/static/placeholder.png";
          %>
            <li class="result-row">
              <a class="row-link" href="/restaurants/<%= r.id %>" aria-label="פתח <%= r.name %>">
                <img class="thumb" src="<%= thumb %>" alt="תמונה של <%= r.name %>" loading="lazy"/>
                <div class="meta">
                  <div class="title"><%= r.name %></div>
                  <div class="sub muted"><%= r.city %> · <%= r.address %></div>
                </div>
                <% if (!r.approved) { %>
                  <span class="badge warn" title="טרם אושרה">ממתינה לאישור</span>
                <% } %>
              </a>
            </li>
          <% }) %>
        </ul>
      <% } %>
    </section>
  <% } else { %>
    <p class="muted">טיפ: התחילו להקליד כדי לקבל הצעות (אוטוקומפליט).</p>
  <% } %>
</main>

<script>
(function(){
  const input = document.getElementById('q');
  const box   = document.getElementById('ac-list');
  const MAX  = 8;
  const PLACEHOLDER = "/static/placeholder.png";

  let aborter = null;
  let items = [];       // [{id,name,city,address,thumb}]
  let active = -1;      // אינדקס מוצע שנבחר במקלדת
  let lastQuery = "";

  const debounce = (fn, ms=180) => {
    let t = null;
    return (...args) => { clearTimeout(t); t = setTimeout(() => fn(...args), ms); };
  };

  const normPhotos = (photos) => {
    const arr = Array.isArray(photos) ? photos : [];
    const ss  = arr.map(p => (typeof p === 'string' ? p : p?.dataUrl)).filter(Boolean);
    return ss;
  };

  function hide() {
    box.hidden = true;
    box.innerHTML = "";
    active = -1;
  }
  function show() {
    if (!box.innerHTML.trim()) { box.hidden = true; return; }
    box.hidden = false;
  }

  function render() {
    if (!items.length) { hide(); return; }
    box.innerHTML = items.map((r, i) => `
      <div class="ac-item${i===active ? ' is-active' : ''}" data-idx="${i}" role="option" aria-selected="${i===active}">
        <img class="ac-thumb" src="${r.thumb || PLACEHOLDER}" alt="תמונה של ${r.name}"/>
        <div class="ac-meta">
          <div class="ac-title">${escapeHtml(r.name)}</div>
          <div class="ac-sub">${escapeHtml(r.city)} · ${escapeHtml(r.address)}</div>
        </div>
      </div>
    `).join("");
    show();
  }

  function escapeHtml(s) {
    return String(s ?? "")
      .replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;')
      .replace(/"/g,'&quot;').replace(/'/g,'&#39;');
  }

  async function search(q) {
    if (!q || !q.trim()) { items = []; render(); return; }

    // בטל בקשה קודמת
    try { aborter?.abort(); } catch {}
    aborter = new AbortController();

    const url = new URL('/api/restaurants', window.location.origin);
    url.searchParams.set('q', q);
    url.searchParams.set('approved', '1');

    try {
      const res = await fetch(url.toString(), { signal: aborter.signal, headers: { 'Accept':'application/json' }});
      if (!res.ok) throw new Error('http '+res.status);
      const data = await res.json();
      // נבנה מודל קל להצעות
      items = (Array.isArray(data) ? data : []).slice(0, MAX).map(r => {
        const ps = normPhotos(r.photos);
        return {
          id: r.id,
          name: r.name || "",
          city: r.city || "",
          address: r.address || "",
          thumb: ps[0] || PLACEHOLDER,
        };
      });
      active = -1;
      render();
    } catch(e) {
      if (e?.name === 'AbortError') return;
      console.warn('[ac] fetch failed:', e);
      items = []; render();
    }
  }

  const onInput = debounce((ev) => {
    const q = ev.target.value || "";
    lastQuery = q;
    if (q.trim().length < 1) { items = []; render(); return; }
    search(q);
  }, 150);

  input.addEventListener('input', onInput);

  input.addEventListener('keydown', (ev) => {
    if (box.hidden) return;
    const K = ev.key;
    if (K === 'ArrowDown') {
      ev.preventDefault();
      if (!items.length) return;
      active = (active + 1) % items.length;
      render();
    } else if (K === 'ArrowUp') {
      ev.preventDefault();
      if (!items.length) return;
      active = (active - 1 + items.length) % items.length;
      render();
    } else if (K === 'Enter') {
      if (active >= 0 && active < items.length) {
        ev.preventDefault();
        go(items[active]);
      }
    } else if (K === 'Escape') {
      hide();
    }
  });

  function go(row) {
    if (!row || !row.id) return;
    window.location.href = `/restaurants/${encodeURIComponent(row.id)}?date=${new Date().toISOString().slice(0,10)}`;
  }

  box.addEventListener('mousedown', (ev) => {
    // לא לאבד פוקוס לפני הניווט
    ev.preventDefault();
    const el = ev.target.closest('.ac-item');
    if (!el) return;
    const i = Number(el.dataset.idx || -1);
    if (i >= 0 && i < items.length) go(items[i]);
  });

  // פתיחה ראשונית אם יש ערך
  if ((input.value || "").trim()) {
    search(input.value.trim());
  }

  // סגירה כשמאבדים פוקוס (עם דילי קטן כדי לא לבטל קליק)
  let blurTimer = null;
  input.addEventListener('blur', () => {
    blurTimer = setTimeout(() => hide(), 120);
  });
  input.addEventListener('focus', () => {
    clearTimeout(blurTimer);
    if (items.length) show();
    else if (input.value.trim()) search(input.value.trim());
  });

  // סגירת התיבה בלחיצה מחוץ
  document.addEventListener('click', (e) => {
    if (!box.contains(e.target) && e.target !== input) hide();
  });
})();
</script>

<style>
  .container { max-width: 960px; margin: 24px auto; padding: 0 16px; }
  .card { border: 1px solid #e2e8f0; border-radius: 12px; padding: 16px; margin: 12px 0; background: #fff; box-shadow: 0 1px 4px rgba(0,0,0,.05); }
  .search-row { display: flex; gap: 10px; position: relative; }
  .search-row input[type="text"] { flex: 1; padding: 10px 12px; border: 1px solid #cbd5e0; border-radius: 8px; font-size: 1rem; }
  .btn { padding: 10px 16px; border: none; border-radius: 8px; background: #667eea; color: #fff; cursor: pointer; }
  .btn:hover { background: #5a67d8; }
  .muted { color: #6b7280; }

  .results { list-style: none; margin: 0; padding: 0; display: grid; gap: 10px; }
  .result-row { background: #fff; border: 1px solid #eee; border-radius: 12px; }
  .row-link { display: flex; gap: 12px; align-items: center; padding: 10px; text-decoration: none; color: inherit; }
  .row-link:hover { background: #fafafa; }
  .thumb { width: 68px; height: 68px; object-fit: cover; border-radius: 10px; border: 1px solid #eee; flex: 0 0 68px; }
  .meta { min-width: 0; flex: 1; }
  .title { font-weight: 600; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
  .sub { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
  .badge.warn { padding: 4px 8px; border-radius: 999px; background: #fff5f5; color: #c53030; border: 1px solid #fed7d7; font-size: .85rem; }

  /* --- אוטוקומפליט --- */
  .ac-list {
    position: absolute;
    inset-inline: 16px 16px; /* מרווח קטן משני הצדדים */
    z-index: 1000;
    margin-top: 6px;
    border: 1px solid #e2e8f0;
    border-radius: 10px;
    background: #fff;
    box-shadow: 0 8px 24px rgba(0,0,0,.08);
    max-height: 420px;
    overflow-y: auto;
    padding: 6px;
  }
  .ac-item {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 8px;
    border-radius: 8px;
    cursor: pointer;
  }
  .ac-item:hover, .ac-item.is-active { background: #f8f9ff; }
  .ac-thumb {
    width: 44px; height: 44px; object-fit: cover;
    border-radius: 8px; border: 1px solid #eee; flex: 0 0 44px;
  }
  .ac-meta { min-width: 0; }
  .ac-title { font-weight: 600; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
  .ac-sub   { font-size: .9rem; color: #6b7280; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }

  @media (max-width: 560px){
    .row-link { padding: 8px; }
    .thumb { width: 56px; height: 56px; }
    .ac-list { inset-inline: 8px 8px; }
  }
</style>
