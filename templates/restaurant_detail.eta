<% layout("_layout", it) %>
<main class="container sb-rest">
  <header class="page-header card hero-head">
    <div class="hd-text">
      <h1 class="title"><%= it.restaurant.name %></h1>
      <p class="muted"><%= it.restaurant.city %> · <%= it.restaurant.address %></p>
      <% if (it.restaurant.phone) { %>
        <p class="muted" dir="ltr">טלפון: <%= it.restaurant.phone %></p>
      <% } %>
    </div>
  </header>

  <%
    const _photos = Array.isArray(it.restaurant.photos)
      ? it.restaurant.photos.map(p => (typeof p === 'string' ? p : p?.dataUrl)).filter(Boolean)
      : [];
    const staticPrefix = it.staticPrefix || "/static";
    const PLACEHOLDER = staticPrefix + "/placeholder.png";
    const hero = _photos[0] || PLACEHOLDER;

    const SLOT_STEP = it.restaurant?.slotIntervalMinutes || it.slotIntervalMinutes || 15;
    const PEOPLE_INIT = Math.max(1, Number(it.people || 2) || 2);
  %>

  <!-- Hero -->
  <section class="hero card" aria-label="תמונה ראשית">
    <img
      src="<%= hero %>"
      alt="תמונה ראשית של <%= it.restaurant.name %>"
      class="hero-img"
      onerror="this.src='<%= PLACEHOLDER %>'"
    />
  </section>

  <!-- שלב 1: בחירת זמן/תאריך/סועדים -->
  <section class="card" id="step-1">
    <h2 class="h2">הזמנת מקום — שלב 1</h2>

    <% if (it.conflict) { %>
      <div class="alert warn" role="alert">
        אין זמינות בשעה שבחרת. בחר/י שעה אחרת מהרשימה להלן.
      </div>
    <% } %>

    <!-- שים לב: זה אותו טופס סופי; רק את שלב 2 נציג/נסתיר פרוגרסיבית -->
    <form id="reserve-form"
          class="form-grid"
          action="/restaurants/<%= it.restaurant.id %>/reserve"
          method="post" novalidate>
      <div class="form-row">
        <label for="date"><span>תאריך</span></label>
        <input id="date" name="date" type="date" required value="<%= it.date || '' %>"/>
      </div>

      <div class="form-row">
        <label for="people"><span>מס׳ סועדים</span></label>
        <input id="people" name="people" type="number" min="1" step="1" required value="<%= PEOPLE_INIT %>"/>
      </div>

      <div class="form-row time-row">
        <label for="time-display"><span>שעה</span></label>
        <div class="time-dropdown-wrapper">
          <button type="button" class="time-dropdown-btn" id="time-display" aria-haspopup="listbox" aria-expanded="false">
            <%= it.time || "בחר שעה" %>
            <span class="arrow">▾</span>
          </button>
          <div class="time-options" id="time-options" hidden role="listbox"></div>
        </div>
        <input type="hidden" id="time" name="time" value="<%= it.time || '' %>"/>
        <small class="muted">שעות בתדירות <span id="step-label"><%= SLOT_STEP %></span> דקות (רק בתוך שעות הפתיחה של המסעדה)</small>
      </div>

      <div class="form-actions">
        <!-- במקום לשלוח – עוברים לשלב 2 -->
        <button type="button" id="to-step-2" class="btn primary">המשך לשלב פרטים</button>
        <button type="button" id="check-btn" class="btn ghost" data-rid="<%= it.restaurant.id %>">בדוק זמינות</button>
      </div>

      <!-- שלב 2: פרטי קשר + הערות (מוסתר עד לחיצה) -->
      <fieldset id="step-2" class="step2" hidden>
        <legend class="h2">שלב 2 — פרטי יצירת קשר</legend>

        <div class="form-row">
          <label for="name"><span>שם המזמין/ה</span></label>
          <input id="name" name="name" type="text" autocomplete="name" placeholder="שם פרטי ומשפחה" required />
        </div>

        <div class="form-row">
          <label for="phone"><span>טלפון</span></label>
          <input id="phone" name="phone" type="tel" dir="ltr" autocomplete="tel" placeholder="05x-xxxxxxx" required />
        </div>

        <div class="form-row">
          <label for="email"><span>אימייל</span></label>
          <input id="email" name="email" type="email" dir="ltr" autocomplete="email" placeholder="name@example.com" required />
        </div>

        <div class="form-row" style="grid-column:1 / -1">
          <label for="notes"><span>הערות</span></label>
          <textarea id="notes" name="notes" rows="3" placeholder="אלרגיות, העדפות ישיבה וכו’"></textarea>
        </div>

        <div class="form-actions">
          <button type="submit" class="btn primary">אישור הזמנה</button>
          <button type="button" id="back-to-step-1" class="btn ghost">חזרה לשלב 1</button>
        </div>
      </fieldset>
    </form>
  </section>

  <!-- הצעות סביב השעה -->
  <section class="card" id="around-card" hidden>
    <h3 class="h3">שעות זמינות סביב המועד שבחרת (±2 שעות)</h3>
    <div id="around-slots" class="slots"></div>
    <small class="muted">לחיצה על שעה מעתיקה לשדה השעה.</small>
  </section>

  <% if (it.restaurant.description) { %>
    <section class="card">
      <h2 class="h2">על המסעדה</h2>
      <p class="muted"><%= it.restaurant.description %></p>
    </section>
  <% } %>

  <% if (it.restaurant.menu && it.restaurant.menu.length) { %>
    <section class="card">
      <h2 class="h2">תפריט</h2>
      <ul class="menu-list">
        <% it.restaurant.menu.forEach(item => { %>
          <li class="menu-item">
            <div class="mi-row">
              <strong class="mi-name"><%= item.name %></strong>
              <% if (item.price != null) { %>
                <span class="mi-price">₪<%= item.price %></span>
              <% } %>
            </div>
            <% if (item.desc) { %><div class="mi-desc muted"><%= item.desc %></div><% } %>
          </li>
        <% }) %>
      </ul>
    </section>
  <% } %>

  <% if (_photos.length > 0) { %>
    <section class="card">
      <h2 class="h2">תמונות</h2>
      <div class="photo-grid">
        <% _photos.forEach(src => { %>
          <img src="<%= src %>" alt="תמונה של המסעדה" loading="lazy" onerror="this.src='<%= PLACEHOLDER %>'"/>
        <% }) %>
      </div>
    </section>
  <% } %>
</main>

<!-- *** הזרקת נתונים מהשרת (כולל rid) *** -->
<meta id="srv-data"
  data-rid="<%= it.restaurant.id %>"
  data-weekly='<%= JSON.stringify(it.restaurant?.weeklySchedule ?? it.restaurant?.openingHours ?? it.restaurant?.hours ?? it.restaurant?.open_hours ?? null) %>'
  data-windows='<%= JSON.stringify(it.openingWindows ?? null) %>'
  data-step='<%= JSON.stringify(it.restaurant?.slotIntervalMinutes ?? it.slotIntervalMinutes ?? 15) %>'>

<script>
  (function () {
    const meta = document.getElementById("srv-data");
    console.debug("SRV weeklySchedule:", meta?.dataset.weekly ?? "(missing)");
    console.debug("SRV openingWindows(today):", meta?.dataset.windows ?? "(missing)");
    console.debug("SRV slotIntervalMinutes:", meta?.dataset.step ?? "(missing)");
    console.debug("SRV rid:", meta?.dataset.rid ?? "(missing)");
  })();
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const btn = document.getElementById("time-display");
    const opts = document.getElementById("time-options");
    const hiddenInput = document.getElementById("time");
    const form = document.getElementById("reserve-form");
    const dateInput = document.getElementById("date");
    const peopleInput = document.getElementById("people");
    const stepLabel = document.getElementById("step-label");
    const meta = document.getElementById("srv-data");

    const toStep2Btn = document.getElementById("to-step-2");
    const backBtn = document.getElementById("back-to-step-1");
    const step2 = document.getElementById("step-2");

    const parseJSON = (s) => { try { return JSON.parse(s); } catch { return null; } };
    const RID = meta?.dataset.rid || "";
    const FALLBACK_WEEKLY = parseJSON(meta?.dataset.weekly ?? "null");
    const FALLBACK_WINDOWS_TODAY = parseJSON(meta?.dataset.windows ?? "null");
    let STEP_MIN = Math.max(1, parseInt(parseJSON(meta?.dataset.step ?? "15") ?? 15, 10) || 15);
    if (stepLabel) stepLabel.textContent = String(STEP_MIN);

    /* ====== Step Flow ====== */
    toStep2Btn?.addEventListener("click", () => {
      const dateVal = (dateInput.value || "").trim();
      const timeVal = (hiddenInput.value || "").trim();
      const pplVal  = Math.max(1, parseInt((peopleInput.value || "1"), 10) || 1);
      if (!dateVal || !timeVal || !pplVal) {
        alert("נא לבחור תאריך, שעה ומספר סועדים לפני המשך.");
        return;
      }
      step2.hidden = false;
      step2.scrollIntoView({ behavior: "smooth", block: "start" });
    });

    backBtn?.addEventListener("click", () => {
      step2.hidden = true;
      document.getElementById("step-1").scrollIntoView({ behavior: "smooth", block: "start" });
    });

    /* ====== Time building (כמו בקוד שלך) ====== */
    const pad2 = (n) => String(n).padStart(2, "0");
    const toMin = (hhmm) => {
      const m = (hhmm || "").match(/^(\d{1,2}):(\d{2})$/);
      if (!m) return null;
      const h = Math.min(23, Math.max(0, parseInt(m[1], 10)));
      const mi = Math.min(59, Math.max(0, parseInt(m[2], 10)));
      return h * 60 + mi;
    };
    const fromMin = (mins) => `${pad2(Math.floor(mins/60))}:${pad2(mins%60)}`;
    const roundToStepUp = (mins) => {
      const step = Math.max(1, STEP_MIN);
      const rem = mins % step;
      return rem ? mins + (step - rem) : mins;
    };

    async function fetchOpeningForDate(rid, dateStr) {
      const url = `/restaurants/${encodeURIComponent(rid)}/opening?date=${encodeURIComponent(dateStr)}`;
      const res = await fetch(url, { headers: { "Accept": "application/json" }, cache: "no-store" });
      if (!res.ok) throw new Error("opening_fetch_failed");
      return res.json();
    }

    function buildOptionsFromWindows(windows, step) {
      const frag = document.createDocumentFragment();
      let count = 0;
      for (const w of windows) {
        const s = toMin(w.open), e = toMin(w.close);
        if (s == null || e == null) continue;
        for (let m = roundToStepUp(s); m + step <= e; m += step) {
          const hhmm = fromMin(m);
          const div = document.createElement("div");
          div.className = "time-option";
          div.setAttribute("role","option");
          div.dataset.value = hhmm;
          div.textContent = hhmm;
          frag.appendChild(div);
          count++;
        }
      }
      return { frag, count };
    }

    function fallbackRangesFor(dateStr) {
      const d = new Date(dateStr || Date.now());
      if (isNaN(d.getTime())) return [[0, 24*60-1]];
      const dow = d.getDay();

      if (Array.isArray(FALLBACK_WINDOWS_TODAY) && FALLBACK_WINDOWS_TODAY.length) {
        const arr = FALLBACK_WINDOWS_TODAY
          .map(w => [toMin(w.open), toMin(w.close)])
          .filter(([a,b]) => Number.isFinite(a) && Number.isFinite(b))
          .map(([a,b]) => b <= a ? [a, 24*60-1] : [a,b]);
        if (arr.length) return arr;
      }
      if (!FALLBACK_WEEKLY) return [[0, 24*60-1]];

      const dayDef = FALLBACK_WEEKLY[dow] ?? FALLBACK_WEEKLY[String(dow)] ?? null;
      if (!dayDef) return [[0, 24*60-1]];

      const toM = (s) => {
        const m = (s || "").match(/^(\d{1,2}):(\d{2})$/);
        if (!m) return null;
        return Math.min(23, Math.max(0, +m[1])) * 60 + Math.min(59, Math.max(0, +m[2]));
      };
      const items = (Array.isArray(dayDef) ? dayDef : [dayDef]).map(item => {
        let s=null,e=null;
        if (typeof item === "string") {
          const m = item.match(/^\s*(\d{1,2}:\d{2})\s*[-–]\s*(\d{1,2}:\d{2})\s*$/);
          if (m) { s=m[1]; e=m[2]; }
        } else if (item && typeof item === "object") {
          s=item.open ?? item.start ?? item.from ?? item.begin;
          e=item.close ?? item.end  ?? item.to   ?? item.finish;
        } else if (Array.isArray(item) && item.length>=2) {
          s=item[0]; e=item[1];
        }
        const a = toM(s), b = toM(e);
        if (a==null || b==null) return null;
        return b <= a ? [a, 24*60-1] : [a,b];
      }).filter(Boolean);

      if (!items.length) return [[0, 24*60-1]];
      return items.sort((A,B)=>A[0]-B[0]);
    }

    function rebuildTimeOptionsFor(dateStr) {
      opts.innerHTML = "";
      const rid = RID;
      if (!rid) return;

      fetchOpeningForDate(rid, dateStr).then(data => {
        const windows = Array.isArray(data?.openingWindows) && data.openingWindows.length
          ? data.openingWindows : [];

        STEP_MIN = Math.max(1, parseInt(data?.slotIntervalMinutes ?? STEP_MIN, 10) || STEP_MIN);
        if (stepLabel) stepLabel.textContent = String(STEP_MIN);

        const { frag, count } = buildOptionsFromWindows(windows, Math.max(1, STEP_MIN));
        if (count === 0) {
          const empty = document.createElement("div");
          empty.className = "time-option";
          empty.setAttribute("aria-disabled","true");
          empty.textContent = "המסעדה סגורה ביום זה";
          opts.appendChild(empty);
        } else {
          opts.appendChild(frag);
        }
        console.debug("GT(API): built time options", { date: dateStr, count, step: STEP_MIN, windows });
      }).catch(() => {
        const ranges = fallbackRangesFor(dateStr);
        const windows = ranges.map(([a,b]) => ({ open: fromMin(a), close: fromMin(b) }));
        const { frag, count } = buildOptionsFromWindows(windows, Math.max(1, STEP_MIN));
        if (count === 0) {
          const empty = document.createElement("div");
          empty.className = "time-option";
          empty.setAttribute("aria-disabled","true");
          empty.textContent = "המסעדה סגורה ביום זה";
          opts.appendChild(empty);
        } else {
          opts.appendChild(frag);
        }
        console.debug("GT(FALLBACK): built time options", { date: dateStr, count, step: STEP_MIN, ranges });
      });
    }

    /* פתיחה/בחירה של רשימת שעות */
    btn.addEventListener("click", (e) => {
      e.preventDefault();
      e.stopPropagation();
      const openNow = !opts.hidden;
      if (openNow) {
        opts.hidden = true;
        btn.setAttribute("aria-expanded","false");
      } else {
        const d = dateInput.value || new Date().toISOString().slice(0,10);
        rebuildTimeOptionsFor(d);
        opts.hidden = false;
        btn.setAttribute("aria-expanded","true");
      }
    });
    document.addEventListener("click", (e) => {
      if (!btn.contains(e.target) && !opts.contains(e.target)) {
        if (!opts.hidden) {
          opts.hidden = true;
          btn.setAttribute("aria-expanded","false");
        }
      }
    });
    opts.addEventListener("click", (ev) => {
      const el = ev.target?.closest?.(".time-option");
      if (!el || el.getAttribute("aria-disabled")==="true") return;
      const v = el.dataset.value;
      if (!v) return;
      btn.textContent = v + " ";
      const arr = document.createElement("span");
      arr.className = "arrow"; arr.textContent = "▾";
      btn.appendChild(arr);
      hiddenInput.value = v;
      opts.hidden = true;
      btn.setAttribute("aria-expanded", "false");
    });

    /* שינוי תאריך → טען שעות מחדש ושמור עקביות */
    dateInput.addEventListener("change", () => {
      const prev = hiddenInput.value;
      const d = dateInput.value || new Date().toISOString().slice(0,10);
      rebuildTimeOptionsFor(d);
      if (prev) {
        setTimeout(() => {
          const stillExists = !!opts.querySelector(`.time-option[data-value="${prev}"]`);
          if (!stillExists) {
            hiddenInput.value = "";
            btn.textContent = "בחר שעה ";
            const arr = document.createElement("span");
            arr.className = "arrow"; arr.textContent = "▾";
            btn.appendChild(arr);
          }
        }, 0);
      }
    });

    /* INIT */
    (function initTimeForInitialDate(){
      const initDate = dateInput.value || new Date().toISOString().slice(0,10);
      rebuildTimeOptionsFor(initDate);
    })();

    /* שליחת טופס (סופי) — מוסיף גם query לקריאה נוחה */
    form.addEventListener("submit", (ev) => {
      const dateVal = (dateInput.value || "").trim();
      const timeVal = (hiddenInput.value || "").trim();
      const pplVal  = Math.max(1, parseInt((peopleInput.value || "1"), 10) || 1);
      if (!dateVal || !timeVal) {
        ev.preventDefault();
        alert("נא לבחור תאריך ושעה");
        return;
      }
      const u = new URL(form.action, window.location.origin);
      u.searchParams.set("date", dateVal);
      u.searchParams.set("time", timeVal);
      u.searchParams.set("people", String(pplVal));
      form.action = u.pathname + u.search;
    });

    /* בדיקת זמינות + הצעות סביב השעה (שומר על הפיצ'ר המקורי) */
    const checkBtn = document.getElementById("check-btn");
    checkBtn?.addEventListener("click", async () => {
      const date = (dateInput.value || "").trim();
      const time = (hiddenInput.value || "").trim();
      const people = Math.max(1, parseInt((peopleInput.value || "1"), 10) || 1);
      if (!date || !time) {
        alert("נא לבחור תאריך ושעה");
        return;
      }
      const rid = checkBtn.dataset.rid;
      const resp = await fetch(`/api/restaurants/${encodeURIComponent(rid)}/check`, {
        method: "POST",
        headers: { "Accept": "application/json", "Content-Type": "application/json" },
        body: JSON.stringify({ date, time, people }),
      });
      const data = await resp.json().catch(()=>null);
      if (resp.ok && data && data.ok) renderAround([]);
      else renderAround(data?.suggestions || []);
    });
  });

  function renderAround(slots) {
    const card = document.getElementById("around-card");
    const box = document.getElementById("around-slots");
    const hiddenInput = document.getElementById("time");
    const btn = document.getElementById("time-display");

    box.innerHTML = "";
    if (Array.isArray(slots) && slots.length) {
      card.hidden = false;
      slots.slice(0, 8).forEach(t => {
        const b = document.createElement("button");
        b.type = "button";
        b.className = "slot";
        b.textContent = t;
        b.onclick = () => {
          hiddenInput.value = t;
          btn.textContent = t + " ";
          const arr = document.createElement("span");
          arr.className = "arrow"; arr.textContent = "▾";
          btn.appendChild(arr);
          card.hidden = true;
          document.getElementById("to-step-2")?.focus();
        };
        box.appendChild(b);
      });
    } else {
      card.hidden = true;
    }
  }
</script>

<style>
  :root{
    --bg:#0e1116; --panel:#121622; --panel2:#171b29; --ink:#e6e8ef; --ink-muted:#9aa3b2;
    --bd:#23293a; --brand:#3b82f6; --ok:#22c55e; --warn:#fbbf24; --danger:#ef4444;
    --radius:16px; --shadow:0 10px 30px rgba(0,0,0,.35);
  }
  body.sb-body{
    background: radial-gradient(1200px 600px at 80% -100px, rgba(65,84,255,.18), transparent),
                radial-gradient(700px 400px at -20% 10%, rgba(19,190,255,.12), transparent),
                var(--bg);
    color:var(--ink);
  }
  .container.sb-rest{ max-width:1100px; margin:18px auto; padding:0 16px; }

  .card{ background:linear-gradient(180deg, rgba(22,26,33,.9), rgba(16,19,25,.94));
         border:1px solid var(--bd); border-radius:var(--radius);
         padding:14px; margin-bottom:16px; box-shadow:var(--shadow); }

  .hero-head .title{ margin:0 0 4px; letter-spacing:.2px }
  .muted{ color:var(--ink-muted) }

  .hero-img{ width:100%; height:320px; object-fit:cover;
             border-radius:14px; border:1px solid var(--bd); background:#0b0f17 }
  @media (max-width:860px){ .hero-img{ height:240px } }

  .h2{ margin:0 0 10px; font-size:20px }
  .h3{ margin:0 0 8px;  font-size:16px }

  .form-grid{ display:grid; grid-template-columns:repeat(2,1fr); gap:12px }
  .form-row{ display:flex; flex-direction:column; gap:6px }
  .form-row.time-row{ grid-column:1 / -1 }
  .form-row input{
    background:var(--panel2); color:var(--ink); border:1px solid var(--bd);
    border-radius:12px; padding:10px 12px; outline:none;
  }
  .form-row input:focus{ box-shadow:0 0 0 3px rgba(59,130,246,.25); border-color:rgba(59,130,246,.45) }
  .form-actions{ grid-column:1 / -1; display:flex; gap:10px; flex-wrap:wrap; margin-top:4px }

  .time-dropdown-wrapper{ position:relative; width:100% }
  .time-dropdown-btn{
    width:100%; padding:10px 12px; border:1px solid var(--bd); border-radius:12px;
    background:var(--panel2); color:var(--ink); text-align:right; cursor:pointer;
    display:flex; justify-content:space-between; align-items:center;
  }
  .time-options{
    position:absolute; inset-inline:0 0; top:calc(100% + 6px); max-height:280px; overflow:auto;
    border:1px solid var(--bd); border-radius:12px; background:var(--panel);
    z-index:40; box-shadow:var(--shadow); padding:6px;
  }
  .time-option{ padding:8px 10px; border-radius:8px; cursor:pointer }
  .time-option[aria-disabled="true"]{ color:var(--ink-muted); cursor:default }
  .time-option:hover{ background:rgba(255,255,255,.05) }
  .arrow{ opacity:.7 }

  .btn{ display:inline-flex; align-items:center; justify-content:center; gap:8px;
        border-radius:999px; padding:10px 16px; border:1px solid var(--bd);
        cursor:pointer; text-decoration:none; color:var(--ink); background:transparent; }
  .btn.primary{ background:var(--brand); border-color:transparent; color:#fff;
                box-shadow:0 6px 18px rgba(59,130,246,.35) }
  .btn.ghost{ background:transparent }
  .btn:hover{ filter:brightness(1.05) }

  .alert.warn{ background:rgba(251,191,36,.14); border:1px solid rgba(251,191,36,.45);
               color:#fde68a; padding:12px; border-radius:12px; }

  .slots{ display:flex; flex-wrap:wrap; gap:8px; margin-top:8px }
  .slot{ padding:8px 12px; border:1px solid var(--bd); border-radius:12px; background:var(--panel2); cursor:pointer }
  .slot:hover{ background:rgba(255,255,255,.04) }

  .menu-list{ list-style:none; margin:0; padding:0; display:grid; gap:10px }
  .menu-item{ border-bottom:1px dashed rgba(255,255,255,.06); padding-bottom:10px }
  .mi-row{ display:flex; align-items:center; justify-content:space-between; gap:10px }
  .mi-price{ color:#bfe0ff }
  .mi-desc{ margin-top:4px }

  @media (max-width:860px){
    .form-grid{ grid-template-columns:1fr }
  }

  /* שלב 2 בלוק */
  .step2{ margin-top:14px; padding-top:6px; border-top:1px solid rgba(255,255,255,.06) }
</style>
